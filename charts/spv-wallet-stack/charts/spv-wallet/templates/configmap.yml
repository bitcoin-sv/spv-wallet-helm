apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "spv-wallet.fullname" . }}
  labels:
    {{  include "spv-wallet.labels" . | nindent 4 }}
data:
  config.yaml: |-
    auth:
      require_signing: {{ .Values.config.auth.require_signing }}
      scheme: {{ .Values.config.auth.scheme }}
      signing_disabled: {{ .Values.config.auth.signing_disabled }}
      admin_key: ""
    cache:
      cluster:
        coordinator: {{ .Values.config.cache.cluster.coordinator }}
        prefix: {{ .Values.config.cache.cluster.prefix }}
        redis: {{ .Values.config.cache.cluster.redis }}
      engine: {{ .Values.config.cache.engine }}
      redis:
        dependency_mode: {{ .Values.config.cache.redis.dependency_mode }}
        max_active_connections: {{ .Values.config.cache.redis.max_active_connections }}
        max_connection_lifetime: {{ .Values.config.cache.redis.max_connection_lifetime }}
        max_idle_connections: {{ .Values.config.cache.redis.max_idle_connections }}
        max_idle_timeout: {{ .Values.config.cache.redis.max_idle_timeout }}
        url: "redis://{{  .Release.Name}}-redis-spv-wallet-master:6379"
        use_tls: {{ .Values.config.cache.redis.use_tls }}
    db:
      datastore:
        debug: {{ .Values.config.db.datastore.debug }}
        engine: {{ .Values.config.db.datastore.engine }}
        table_prefix: {{ .Values.config.db.datastore.table_prefix }}
      {{- if eq .Values.config.db.datastore.engine "postgresql" }}
      sql:
        debug: {{ .Values.config.db.sql.debug }}
        driver: {{ .Values.config.db.sql.driver }}
        host: "{{ .Release.Name }}-postgresql-spv-wallet"
        max_connection_idle_time: {{ .Values.config.db.sql.max_connection_idle_time }}
        max_connection_time: {{ .Values.config.db.sql.max_connection_time }}
        max_idle_connections: {{ .Values.config.db.sql.max_idle_connections }}
        max_open_connections: {{ .Values.config.db.sql.max_open_connections }}
        name: {{ .Values.postgresql.auth.database }}
        password: {{ .Values.config.db.sql.password }}
        port: {{ .Values.config.db.sql.port }}
        replica: {{ .Values.config.db.sql.replica }}
        skip_initialize_with_version: {{ .Values.config.db.sql.skip_initialize_with_version }}
        table_prefix: {{ .Values.config.db.sql.table_prefix }}
        time_zone: {{ .Values.config.db.sql.time_zone }}
        tx_timeout: {{ .Values.config.db.sql.tx_timeout }}
        user: {{ .Values.postgresql.auth.username }}
      {{- else if eq .Values.config.db.datastore.engine "sqlite" }}
      sqlite:
        database_path: {{ .Values.config.db.sqlite.database_path }}
        debug: {{ .Values.config.db.sqlite.debug }}
        max_connection_idle_time: {{ .Values.config.db.sqlite.max_connection_idle_time }}
        max_connection_time: {{ .Values.config.db.sqlite.max_connection_time }}
        max_idle_connections: {{ .Values.config.db.sqlite.max_idle_connections }}
        max_open_connections: {{ .Values.config.db.sqlite.max_open_connections }}
        shared: {{ .Values.config.db.sqlite.shared }}
      {{- else }}
      error: "Unsupported database engine specified. Please use 'postgresql' or 'sqlite'."
      {{- end }}
    debug_profiling: {{ .Values.config.debug_profiling }}
    disable_itc: {{ .Values.config.disable_itc }}
    arc:
      url: {{ .Values.config.arc.url }}
      token: {{ .Values.config.arc.token }}
      {{- if .Values.config.arc.deployment_id }}
        deployment_id: {{ .Values.config.arc.deployment_id }}
      {{- else }}
        deployment_id: 'spv-wallet-{{ printf "%s-$s"  (include "spv-wallet.fullname" .) .Values.global.domainName | adler32sum }}'
      {{- end }}
      callback:
        enabled: {{ .Values.config.arc.callback.enabled }}
        host: 'https://{{.Values.global.domainName}}'
        {{- if .Values.config.arc.callback.token }}
          token: {{ .Values.config.arc.callback.token }}
        {{- end }}
      use_fee_quotes: {{ .Values.config.arc.use_fee_quotes }}
      fee_unit:
        satoshis: {{ .Values.config.arc.fee_unit.satoshis }}
        bytes: {{ .Values.config.arc.fee_unit.bytes }}
    notifications:
      enabled: {{ .Values.config.notifications.enabled }}
    block_headers_service:
      auth_token: ""
      {{- $defaultUrl := printf "http://%s-block-headers-service" .Release.Name | trunc 63 | trimSuffix "-" -}}
      {{- $blockHeadersServiceUrl := default $defaultUrl .Values.config.block_headers_service.url -}}
      url: {{ $blockHeadersServiceUrl }}

    paymail:
      beef:
        block_headers_service_auth_token: ""
        {{- $beefBlockHeadersServiceUrl := printf "%s/api/v1/chain/merkleroot/verify" $blockHeadersServiceUrl -}}
        block_headers_service_url: {{ $beefBlockHeadersServiceUrl }}

        use_beef: {{ .Values.config.paymail.beef.use_beef }}
      default_from_paymail: default@{{  .Values.global.domainName }}
      default_note: {{ .Values.config.paymail.default_note }}
      domain_validation_enabled: {{ .Values.config.paymail.domain_validation_enabled }}
      domains:
        - "{{ .Values.global.domainName }}"
        {{- range .Values.config.paymail.domains }}
        - "{{ . }}"
        {{- end }}
      enabled: {{ .Values.config.paymail.enabled }}
      sender_validation_enabled: {{ .Values.config.paymail.sender_validation_enabled }}
    request_logging: {{ .Values.config.request_logging }}
    server_config:
      idle_timeout: {{ .Values.config.server_config.idle_timeout }}
      port: {{ .Values.config.server_config.port }}
      read_timeout: {{ .Values.config.server_config.read_timeout }}
      write_timeout: {{ .Values.config.server_config.write_timeout }}
    task_manager:
      factory: {{ .Values.config.task_manager.factory }}
    logging:
      level: {{ .Values.config.logging.level }}
      format: {{ .Values.config.logging.format }}
      instance_name: {{ include "spv-wallet.fullname" . }}
    metrics:
      enabled: {{ .Values.config.metrics.enabled }}
