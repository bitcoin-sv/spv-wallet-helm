### SPV Wallet web frontend configuration
global:
  domainName: "example.com"
  ingress:
    # Class name for ingress controller, currently supported controllers are traefik and alb
    # when using traefik, you will need to take care of generating TLS certificates, for example with cert-manager
    className: "alb"
    # Additional annotations for Ingress
    additionalAnnotations: {}
    # AWS certificate ARN used when ALB is used as ingress controller
    certificate_arn: ""
    # custom ingress paths defitions
    # example:
    # customPaths:
    #   - path: /swagger
    #     backend:
    #       service: my-404-service
    #       port:
    #         number: 80
    customPaths: []

replicaCount: 1

image:
  repository: bsvb/spv-wallet-web-frontend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

containerPort: 80

service:
  type: ClusterIP
  port: 80

domainName: test.com

ingress:
  enabled: true
  # Overrides global ingress controller configuration
  className: ""
  # Part that will be added to global domain name
  subdomain: "wallet"
  # Additional annotations for Ingress
  additionalAnnotations: {}
  # custom ingress paths defitions
  # example:
  # customPaths:
  #   - path: /swagger
  #     backend:
  #       service: my-404-service
  #       port:
  #         number: 80
  customPaths: []
  # Configuration used when treafik is used as ingress controller
  traefik:
    tls: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure

  # Configuration used when treafik is used as ingress controller
  alb:
    tls: false
    annotations:
      kubernetes.io/ingress.class: "alb"
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/group.name: alb-https
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/ip-address-type: ipv4
      alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: '443'
      alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
